import { z } from 'zod';
import { colorSchema } from '../reusable/color.js';
import { hiddenSchema } from '../reusable/hidden.js';
import { hrefSchema } from '../reusable/href.js';
import { iconSchema } from '../reusable/icon.js';
import { openApiSchema } from '../reusable/openapi.js';
import { dropdownsSchema } from './dropdown.js';
import { groupsSchema } from './groups.js';
import { languagesSchema } from './languages.js';
import { pagesSchema } from './pages.js';
import { tabsSchema } from './tabs.js';
import { versionsSchema } from './version.js';
const anchorSchema = z
    .object({
    anchor: z.string().nonempty().describe('The name of the anchor'),
    icon: iconSchema.optional(),
    color: colorSchema.optional(),
    hidden: hiddenSchema.optional(),
})
    .and(z.union([
    z.object({ href: hrefSchema }),
    z.object({ openapi: openApiSchema }),
    z.lazy(() => z.object({ languages: languagesSchema })),
    z.lazy(() => z.object({ versions: versionsSchema })),
    z.lazy(() => z.object({ dropdowns: dropdownsSchema })),
    z.lazy(() => z.object({ tabs: tabsSchema })),
    z.lazy(() => z.object({ groups: groupsSchema })),
    z.lazy(() => z.object({ pages: pagesSchema })),
]));
export const anchorsSchema = z.array(anchorSchema).describe('Organizing by anchors');
