var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  mdxToMd: () => mdxToMd
});
module.exports = __toCommonJS(src_exports);

// src/mdx-to-md.ts
var import_node_html_markdown = require("node-html-markdown");
var import_mdx_bundler = require("mdx-bundler");
var import_client = require("mdx-bundler/client");
var import_react = require("react");
var import_server = require("react-dom/server");
var import_promises = require("fs/promises");
var import_path = require("path");
var htmlToMarkdown = new import_node_html_markdown.NodeHtmlMarkdown();
async function mdxToMd(path, options) {
  const contents = await (0, import_promises.readFile)(path, "utf-8");
  const { code } = await (0, import_mdx_bundler.bundleMDX)(__spreadValues({ source: contents, cwd: (0, import_path.dirname)(path) }, options));
  const component = (0, import_client.getMDXComponent)(code);
  const element = (0, import_react.createElement)(component);
  const html = (0, import_server.renderToString)(element);
  const markdown = htmlToMarkdown.translate(html);
  return markdown;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  mdxToMd
});
